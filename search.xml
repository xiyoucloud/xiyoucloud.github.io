<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>搭建博客小技巧</title>
    <url>/2022/12/29/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="插入视频"><a href="#插入视频" class="headerlink" title="插入视频"></a>插入视频</h1><h2 id="视频插件"><a href="#视频插件" class="headerlink" title="视频插件"></a>视频插件</h2><p><a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md">hexo-tag-aplayer</a></p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 插入网络视频</span><br><span class="line">&#123;% dplayer &quot;url=https://cdn.jsdelivr.net/gh/Shen-Yu/cdn/mp4/mp4_demo.mp4&quot; %&#125;</span><br><span class="line"></span><br><span class="line"># 插入acfun 视频</span><br><span class="line">&lt;iframe src=&quot;https://www.acfun.cn/player/ac12945786&quot; style=&quot;width:100%;height:500px;min-width:375px;min-height:200px&quot; id=&quot;ACPlayer-re&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;</span><br><span class="line"></span><br><span class="line"># 插入 B 站视频</span><br><span class="line">&lt;iframe src=&quot;//player.bilibili.com/player.html?aid=606228531&amp;bvid=BV1y84y1t7Y9&amp;cid=922973653&amp;page=1&quot; style=&quot;width:100%;height:500px;min-width:375px;min-height:200px&quot;scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt; &lt;/iframe&gt;</span><br></pre></td></tr></table></figure>
<iframe src="https://www.acfun.cn/player/ac12945786" style="width:100%;height:500px;min-width:375px;min-height:200px" id="ACPlayer-re" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe>
<span id="more"></span>


<iframe src="//player.bilibili.com/player.html?aid=606228531&bvid=BV1y84y1t7Y9&cid=922973653&page=1" style="width:100%;height:500px;min-width:375px;min-height:200px"scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>




<h2 id="其他好用的-hexo-插件"><a href="#其他好用的-hexo-插件" class="headerlink" title="其他好用的 hexo 插件"></a>其他好用的 hexo 插件</h2><ol>
<li><a href="https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md">二次元看板娘：hexo-helper-live2d</a></li>
<li><a href="https://github.com/netcan/hexo-generator-index-pin-top">博客文章置顶：hexo-generator-index-pin-top</a></li>
</ol>
]]></content>
      <tags>
        <tag>搭建博客</tag>
      </tags>
  </entry>
  <entry>
    <title>bash练习</title>
    <url>/2022/12/29/bash%E7%BB%83%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>适用于 ubuntu 20.04<br>ubuntu 20.04 是 “西柚云” 主要使用的操作系统 <a href="https://www.xiyoucloud.net/aff/VKRWMUHQ">西柚云官网</a></p>
</blockquote>
<iframe src="//player.bilibili.com/player.html?aid=606228531&bvid=BV1y84y1t7Y9&cid=922973653&page=1" style="width:100%;height:500px;min-width:375px;min-height:200px"scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>


<h2 id="1-统计文件的行数"><a href="#1-统计文件的行数" class="headerlink" title="1.统计文件的行数"></a><a href="https://www.nowcoder.com/practice/205ccba30b264ae697a78f425f276779?tpId=195&tqId=36211&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">1.统计文件的行数</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line"><span class="built_in">wc</span> -l nowcoder.txt | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span></span><br><span class="line"><span class="comment"># 方法 2-1</span></span><br><span class="line"><span class="built_in">cat</span> nowcoder.txt | <span class="built_in">wc</span> -l</span><br><span class="line"><span class="comment"># 方法 2-2</span></span><br><span class="line"><span class="built_in">wc</span> -l &lt; nowcoder.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 3-1</span></span><br><span class="line"><span class="built_in">cat</span> -n nowcoder.txt | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | <span class="built_in">tail</span> -n 1</span><br><span class="line"><span class="comment"># 方法 3-2</span></span><br><span class="line"><span class="built_in">cat</span> -n nowcoder.txt | <span class="built_in">tail</span> -n 1 | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 4</span></span><br><span class="line">i=0</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> p;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        i=$((i + <span class="number">1</span>))</span><br><span class="line"><span class="keyword">done</span> &lt; nowcoder.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$i</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>

<h2 id="2-打印文件的最后5行"><a href="#2-打印文件的最后5行" class="headerlink" title="2.打印文件的最后5行"></a><a href="https://www.nowcoder.com/practice/ff6f36d357d24ce5a0eb817a0ef85ee2?tpId=195&tqId=36212&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">2.打印文件的最后5行</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法1</span></span><br><span class="line">end=$(<span class="built_in">wc</span> -l &lt; nowcoder.txt)</span><br><span class="line">start=$(( end - <span class="number">5</span> + <span class="number">1</span>))</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$start</span> -lt 1 ]]; <span class="keyword">then</span></span><br><span class="line">	start=1</span><br><span class="line"><span class="keyword">fi</span>	</span><br><span class="line">sed -n <span class="string">&quot;<span class="variable">$start</span>,<span class="variable">$end</span> p&quot;</span> nowcoder.txt</span><br><span class="line"><span class="comment"># 方法 2</span></span><br><span class="line"><span class="built_in">tail</span> -n 5 nowcoder.txt</span><br><span class="line"><span class="comment"># 方法 3</span></span><br><span class="line"><span class="built_in">tac</span> nowcoder.txt | <span class="built_in">head</span> -n 5 | <span class="built_in">tac</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 4</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN &#123;</span></span><br><span class="line"><span class="string">	s=1</span></span><br><span class="line"><span class="string">&#125; &#123;</span></span><br><span class="line"><span class="string">	lines[s]=$0;</span></span><br><span class="line"><span class="string">	s++</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">END &#123;</span></span><br><span class="line"><span class="string">    for(i=NR-4; i&lt;=NR; i++) &#123;</span></span><br><span class="line"><span class="string">        print(lines[i])</span></span><br><span class="line"><span class="string">	&#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span> nowcoder.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 5</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">count_lines</span></span>() &#123;</span><br><span class="line">	number=0</span><br><span class="line">	filename=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">read</span> p;</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            number=$((number + <span class="number">1</span>))</span><br><span class="line">    	<span class="keyword">done</span> &lt; <span class="variable">$filename</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$number</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 获取文件的行数</span></span><br><span class="line">end=`count_lines nowcoder.txt`</span><br><span class="line">start=$((end - <span class="number">5</span> + <span class="number">1</span>))</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$start</span> -lt 1 ]]; <span class="keyword">then</span></span><br><span class="line">	start=1</span><br><span class="line"><span class="keyword">fi</span>	</span><br><span class="line">sed -n <span class="string">&quot;<span class="variable">$start</span>,<span class="variable">$end</span> p&quot;</span> nowcoder.txt</span><br></pre></td></tr></table></figure>

<h2 id="3-输出7的倍数"><a href="#3-输出7的倍数" class="headerlink" title="3.输出7的倍数"></a><a href="https://www.nowcoder.com/practice/8b85768394304511b0eb887244e51872?tpId=195&tqId=36213&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%25E7%25AF%2587&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">3.输出7的倍数</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line">start=0</span><br><span class="line">end=500</span><br><span class="line">step=7</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$start</span> -lt <span class="variable">$end</span> ]; <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> !(( <span class="variable">$start</span> % <span class="variable">$step</span> )); <span class="keyword">then</span></span><br><span class="line">         <span class="built_in">echo</span> <span class="variable">$start</span></span><br><span class="line">         start=$(( start + <span class="number">1</span> ))</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">         start=$(( start + <span class="number">1</span> ))</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 2</span></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> &#123;0..500..7&#125;; <span class="keyword">do</span> </span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;num&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 3</span></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> &#123;0..500&#125;;<span class="keyword">do</span></span><br><span class="line">   [[ <span class="string">&quot;((num%7))&quot;</span> -eq 0 ]] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;num&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h2 id="4-输出第5行的内容"><a href="#4-输出第5行的内容" class="headerlink" title="4.输出第5行的内容"></a><a href="https://www.nowcoder.com/practice/1d5978c6136d4252904757b4fa0c9296?tpId=195&tqId=36214&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%25E7%25AF%2587&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">4.输出第5行的内容</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line">sed -n <span class="string">&#x27;5p&#x27;</span> nowcoder.txt</span><br><span class="line"><span class="comment"># 方法 2 </span></span><br><span class="line"><span class="built_in">head</span> -n 5 nowcoder.txt | <span class="built_in">tail</span> -n 1</span><br><span class="line"><span class="comment"># 方法 3 number row</span></span><br><span class="line">awk <span class="string">&#x27;&#123; if(NR==5) &#123;print($0)&#125; &#125;&#x27;</span> nowcoder.txt</span><br></pre></td></tr></table></figure>

<h2 id="5-打印空行的行号"><a href="#5-打印空行的行号" class="headerlink" title="5.打印空行的行号"></a><a href="https://www.nowcoder.com/practice/030fc368e42e44b8b1f8985a8d6ad255?tpId=195&tqId=36215&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%25E7%25AF%2587&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">5.打印空行的行号</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line">awk -n <span class="string">&#x27;/^$/ &#123;print NR&#125;&#x27;</span> nowcoder.txt</span><br><span class="line"><span class="comment"># 方法 2</span></span><br><span class="line">sed -n <span class="string">&#x27;/^$/=&#x27;</span> nowcoder.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 3</span></span><br><span class="line">i=1</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line; <span class="keyword">do</span></span><br><span class="line">	<span class="keyword">if</span> [[ <span class="variable">$line</span> =~ ^$ ]]; <span class="keyword">then</span></span><br><span class="line">		<span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">	<span class="keyword">fi</span>		</span><br><span class="line">	i=$((i+<span class="number">1</span>))</span><br><span class="line"><span class="keyword">done</span>&lt;<span class="variable">$1</span></span><br></pre></td></tr></table></figure>

<h2 id="6-去掉空行"><a href="#6-去掉空行" class="headerlink" title="6.去掉空行"></a><a href="https://www.nowcoder.com/practice/0372acd5725d40669640fd25e9fb7b0f?tpId=195&tqId=36216&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%25E7%25AF%2587&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">6.去掉空行</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># sed 只有加了 -i 参数才会修改原文件，否则只会输出修改后的内容，你也可以使用重定向符号（&gt;）将输出重定向到 1 个文件中</span></span><br><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line">sed -n <span class="string">&#x27;/^$/!p&#x27;</span> nowcoder.txt</span><br><span class="line"><span class="comment"># 方法2</span></span><br><span class="line">awk -n <span class="string">&#x27;&#123;if ($0 != &quot;&quot;) print $0&#125;&#x27;</span> nowcoder.txt</span><br><span class="line"><span class="comment"># 方法 3</span></span><br><span class="line">awk <span class="string">&#x27;!/^$/ &#123;print $0&#125;&#x27;</span> nowcoder.txt</span><br><span class="line"><span class="comment"># 方法 4</span></span><br><span class="line">grep -v <span class="string">&#x27;^$&#x27;</span> nowcoder.txt</span><br></pre></td></tr></table></figure>

<h2 id="7-打印字母数小于8的单词"><a href="#7-打印字母数小于8的单词" class="headerlink" title="7.打印字母数小于8的单词"></a><a href="https://www.nowcoder.com/practice/bd5b5d4b93a04226a81afbabf0be797d?tpId=195&tqId=36217&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%25E7%25AF%2587&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">7.打印字母数小于8的单词</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line">awk -F <span class="string">&quot; &quot;</span> <span class="string">&#x27;&#123;for(i=1;i&lt;=NF;i++) &#123; if(length($i) &lt; 8) &#123; print($i) &#125;&#125;&#125;&#x27;</span> nowcoder.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 2</span></span><br><span class="line">words=$(<span class="built_in">cat</span> nowcoder.txt)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$&#123;words[*]&#125;</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$&#123;#i&#125;</span> -lt 8 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$&#123;i&#125;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 3</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(<span class="built_in">cat</span> nowcoder.txt); <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$&#123;#i&#125;</span> -lt 8 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$&#123;i&#125;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h2 id="8-统计所有进程占用内存百分比的和"><a href="#8-统计所有进程占用内存百分比的和" class="headerlink" title="8.统计所有进程占用内存百分比的和"></a><a href="https://www.nowcoder.com/practice/fb24140bac154e5b99e44e0cee45dcaf?tpId=195&tqId=36218&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%25E7%25AF%2587&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">8.统计所有进程占用内存百分比的和</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line">awk <span class="string">&#x27;&#123;&#125; &#123;sum += $6&#125; END &#123;print(sum)&#125;&#x27;</span> nowcoder.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 2</span></span><br><span class="line"><span class="built_in">sum</span>=0</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> p</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    arr=(<span class="variable">$p</span>)</span><br><span class="line">    ((<span class="built_in">sum</span> += arr[5]))</span><br><span class="line"><span class="keyword">done</span> &lt; nowcoder.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$sum</span></span><br></pre></td></tr></table></figure>

<h2 id="9-统计每个单词出现的个数"><a href="#9-统计每个单词出现的个数" class="headerlink" title="9.统计每个单词出现的个数"></a><a href="https://www.nowcoder.com/practice/ad921ccc0ba041ea93e9fb40bb0f2786?tpId=195&tqId=36219&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%25E7%25AF%2587&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">9.统计每个单词出现的个数</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line">awk <span class="string">&#x27;&#123;for(i=1;i&lt;=NF;i++) a[$i]+=1&#125;END&#123;for (x in a) print x, a[x]&#125;&#x27;</span> nowcoder.txt</span><br></pre></td></tr></table></figure>

<h2 id="10-第二列是否有重复"><a href="#10-第二列是否有重复" class="headerlink" title="10.第二列是否有重复"></a><a href="https://www.nowcoder.com/practice/61b79ffe88964c7ab7b98ae16dd76492?tpId=195&tqId=36220&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%25E7%25AF%2587&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">10.第二列是否有重复</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line">awk <span class="string">&#x27;&#123;a[$2]+=1&#125;END&#123;for(x in a)&#123;if(a[x]&gt;1) print a[x],x&#125;&#125;&#x27;</span> nowcoder.txt</span><br></pre></td></tr></table></figure>

<h2 id="11-转置文件的内容"><a href="#11-转置文件的内容" class="headerlink" title="11.转置文件的内容"></a><a href="https://www.nowcoder.com/practice/2240cd809c8f4d80b3479d7c95bb1e2e?tpId=195&tqId=36221&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%25E7%25AF%2587&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">11.转置文件的内容</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line">awk <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">     for(i=1;i&lt;=NF;i++)&#123;</span></span><br><span class="line"><span class="string">       if(NR==1)&#123;</span></span><br><span class="line"><span class="string">         row[i] = $i;</span></span><br><span class="line"><span class="string">       &#125;else&#123;</span></span><br><span class="line"><span class="string">         row[i] = row[i]&quot; &quot;$i;</span></span><br><span class="line"><span class="string">       &#125;</span></span><br><span class="line"><span class="string">     &#125;</span></span><br><span class="line"><span class="string"> &#125;END&#123;</span></span><br><span class="line"><span class="string">   for(i=1;i&lt;=NF;i++)&#123;</span></span><br><span class="line"><span class="string">     print row[i]</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string"> &#125;</span></span><br><span class="line"><span class="string">&#x27;</span> nowcoder.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 2</span></span><br><span class="line"><span class="built_in">declare</span> -a arr1</span><br><span class="line"><span class="built_in">declare</span> -a arr2</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line </span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    arr=(<span class="variable">$line</span>)</span><br><span class="line">    arr1[<span class="variable">$&#123;#arr1[@]&#125;</span>]=<span class="variable">$&#123;arr[0]&#125;</span></span><br><span class="line">    arr2[<span class="variable">$&#123;#arr2[@]&#125;</span>]=<span class="variable">$&#123;arr[1]&#125;</span></span><br><span class="line"><span class="keyword">done</span> &lt; nowcoder.txt</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;arr1[@]&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;arr2[@]&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="12-打印每一行出现的数字个数"><a href="#12-打印每一行出现的数字个数" class="headerlink" title="12.打印每一行出现的数字个数"></a><a href="https://www.nowcoder.com/practice/2d2a124f98054292aef71b453e705ca9?tpId=195&tqId=36222&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%25E7%25AF%2587&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">12.打印每一行出现的数字个数</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line">awk <span class="string">&#x27;&#123;for(i=1; i&lt;NF; i++) &#123;if($i &gt;= 1 &amp;&amp; $i &lt;= 5) sum+=1&#125;END &#123;print sum&#125;&#125;&#x27;</span></span><br><span class="line"><span class="comment"># 方法 2</span></span><br><span class="line">awk -F <span class="string">&quot;[1,2,3,4,5]&quot;</span> <span class="string">&#x27;BEGIN&#123;sum=0&#125;&#123;print &quot;line&quot;NR \</span></span><br><span class="line"><span class="string">&quot;number:&quot;(NF-1);sum+=(NF-1)&#125;END&#123;print &quot;sum is &quot;sum&#125;&#x27;</span> nowcoder.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 3</span></span><br><span class="line"><span class="built_in">let</span> linecount=0</span><br><span class="line"><span class="built_in">let</span> <span class="built_in">sum</span>=0</span><br><span class="line"><span class="built_in">let</span> count=0 </span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">for</span> (( i=0; i&lt;<span class="variable">$&#123;#line&#125;</span>;i++ ))</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [[  <span class="variable">$&#123;line:$i:1&#125;</span> =~ [1-5] ]]</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">            (( count = count + 1 ))</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    linecount=$((<span class="variable">$linecount</span>+<span class="number">1</span>))</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;line<span class="variable">$linecount</span> number:<span class="variable">$count</span>&quot;</span></span><br><span class="line">    <span class="built_in">sum</span>=$((<span class="variable">$sum</span>+<span class="variable">$count</span>))</span><br><span class="line">    count=0</span><br><span class="line"><span class="keyword">done</span>&lt;nowcoder.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;sum is <span class="variable">$sum</span>&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="13-去掉所有包含this的句子"><a href="#13-去掉所有包含this的句子" class="headerlink" title="13.去掉所有包含this的句子"></a><a href="https://www.nowcoder.com/practice/2c5a46ef755a4f099368f7588361a8af?tpId=195&tqId=36223&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">13.去掉所有包含this的句子</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line">awk <span class="string">&#x27;&#123;flag=0;</span></span><br><span class="line"><span class="string">    for(i=1; i&lt;=NF; i++) &#123;</span></span><br><span class="line"><span class="string">        if ($i == &quot;this&quot;)&#123;</span></span><br><span class="line"><span class="string">            flag=1;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125; </span></span><br><span class="line"><span class="string">    if (flag != 1) &#123;</span></span><br><span class="line"><span class="string">        print $0;</span></span><br><span class="line"><span class="string">        flag=0;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span> nowcoder.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 2</span></span><br><span class="line">grep -v this nowcoder.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 3</span></span><br><span class="line">sed <span class="string">&#x27;/this/d&#x27;</span> nowcoder.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 3</span></span><br><span class="line">awk <span class="string">&#x27;$0!~/this/ &#123;print $0&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 5</span></span><br><span class="line">awk <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">     if ($0 !~ /this/) &#123;</span></span><br><span class="line"><span class="string">         print $0</span></span><br><span class="line"><span class="string">     &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="14-求平均值"><a href="#14-求平均值" class="headerlink" title="14.求平均值"></a><a href="https://www.nowcoder.com/practice/c44b98aeaf9942d3a61548bff306a7de?tpId=195&tqId=36224&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">14.求平均值</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line">awk <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    if(NR==1) &#123;</span></span><br><span class="line"><span class="string">        N=$1</span></span><br><span class="line"><span class="string">    &#125; else &#123;</span></span><br><span class="line"><span class="string">        sum+=$1</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125; END &#123;</span></span><br><span class="line"><span class="string">    printf(&quot;%.3f&quot;, sum/N)</span></span><br><span class="line"><span class="string">    &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 2 bash xx.sh nowcoder.txt</span></span><br><span class="line"><span class="built_in">read</span> loop</span><br><span class="line"><span class="built_in">sum</span>=0</span><br><span class="line">count=0</span><br><span class="line"><span class="keyword">for</span>((i=0; i &lt; <span class="variable">$loop</span>; ++i)); <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">read</span> temp</span><br><span class="line">    (( <span class="built_in">sum</span> += temp))</span><br><span class="line">    ((++count))</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;scale=3;<span class="variable">$sum</span>/<span class="variable">$count</span>&quot;</span> | bc</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="15-去掉不需要的单词"><a href="#15-去掉不需要的单词" class="headerlink" title="15.去掉不需要的单词"></a><a href="https://www.nowcoder.com/practice/838a3acde92c4805a22ac73ca04e503b?tpId=195&tqId=36225&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">15.去掉不需要的单词</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line">awk <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    for (i=1; i&lt;=NF; i++) &#123;</span></span><br><span class="line"><span class="string">        if ($i ~ /.*[bB]+.*/) &#123;</span></span><br><span class="line"><span class="string">            continue</span></span><br><span class="line"><span class="string">        &#125; else &#123;</span></span><br><span class="line"><span class="string">            print $i</span></span><br><span class="line"><span class="string">        &#125;   </span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br><span class="line"><span class="comment"># 方法 2</span></span><br><span class="line">awk <span class="string">&#x27;/!*[B|b]*/ &#123;print $0&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="16-判断输入的是否为IP地址"><a href="#16-判断输入的是否为IP地址" class="headerlink" title="16.判断输入的是否为IP地址"></a><a href="https://www.nowcoder.com/practice/ad7b6dbfab2a4267a9991110c57aa64f?tpId=195&tqId=39425&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">16.判断输入的是否为IP地址</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line">awk <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    if ($0 ~ /^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.)&#123;3&#125;(25[0-5]|2[0-4][0-9]|1[09][0-9]|[1-9][0-9]|[0-9])$/) &#123;</span></span><br><span class="line"><span class="string">        print(&quot;yes&quot;);</span></span><br><span class="line"><span class="string">    &#125; else if ($0 ~ /[[:digit:]].[[:digit:]].[[:digit:]].[[:digit:]]/)&#123;</span></span><br><span class="line"><span class="string">        print(&quot;no&quot;);</span></span><br><span class="line"><span class="string">    &#125; else &#123;</span></span><br><span class="line"><span class="string">        print(&quot;error&quot;)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span> nowcoder.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 2</span></span><br><span class="line">awk -F <span class="string">&#x27;.&#x27;</span> <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    if (NF == 4) &#123;</span></span><br><span class="line"><span class="string">        for (i = 1; i &lt; 5; i++) &#123;</span></span><br><span class="line"><span class="string">            if ($i &gt; 255 || $i &lt; 0) &#123;</span></span><br><span class="line"><span class="string">                print(&quot;no&quot;)</span></span><br><span class="line"><span class="string">                break</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        if (i == 5) &#123;</span></span><br><span class="line"><span class="string">            print(&quot;yes&quot;)</span></span><br><span class="line"><span class="string">        &#125; else &#123;</span></span><br><span class="line"><span class="string">            print(&quot;error&quot;)</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">&#125;&#x27;</span> nowcoder.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 3</span></span><br><span class="line">IFS=<span class="string">&#x27;.&#x27;</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line; <span class="keyword">do</span></span><br><span class="line">    arr=(<span class="variable">$&#123;line&#125;</span>)</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$&#123;#arr[*]&#125;</span> -ne 4 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">printf</span> <span class="string">&quot;error\n&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">for</span> ((i = 0; i &lt; <span class="variable">$&#123;#arr[*]&#125;</span>; i++)); <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">if</span> [ <span class="variable">$&#123;arr[<span class="variable">$&#123;i&#125;</span>]&#125;</span> -gt 255 ]; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">printf</span> <span class="string">&quot;no\n&quot;</span></span><br><span class="line">                <span class="built_in">break</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">            <span class="keyword">done</span></span><br><span class="line">        [ <span class="variable">$i</span> == 4 ] &amp;&amp; <span class="built_in">printf</span> <span class="string">&quot;yes\n&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h2 id="17-将字段逆序输出文件的每行"><a href="#17-将字段逆序输出文件的每行" class="headerlink" title="17.将字段逆序输出文件的每行"></a><a href="https://www.nowcoder.com/practice/e33fff83fd384a21ba67f3104fb8d646?tpId=195&tqId=39426&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">17.将字段逆序输出文件的每行</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk -F <span class="string">&quot;:&quot;</span> <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    for(i = NF; i &gt;=1; i--) &#123;</span></span><br><span class="line"><span class="string">        printf(&quot;%s&quot;, $i)</span></span><br><span class="line"><span class="string">        if (i != 1) &#123;</span></span><br><span class="line"><span class="string">            printf(&quot;:&quot;)</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    print &quot;&quot;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span> nowcoder.txt</span><br></pre></td></tr></table></figure>

<h2 id="18-域名进行计数排序处理"><a href="#18-域名进行计数排序处理" class="headerlink" title="18.域名进行计数排序处理"></a><a href="https://www.nowcoder.com/practice/f076c0a3c1274cbe9d615e0f3fd965f1?tpId=195&tqId=39427&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">18.域名进行计数排序处理</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk -F <span class="string">&quot;/&quot;</span> <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    arr[$3]++</span></span><br><span class="line"><span class="string">&#125; END &#123;</span></span><br><span class="line"><span class="string">    for (i in arr) &#123;</span></span><br><span class="line"><span class="string">        printf(&quot;%d %s\n&quot;, arr[i], i)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span> | <span class="built_in">sort</span> -r	</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="19-打印等腰三角形"><a href="#19-打印等腰三角形" class="headerlink" title="19.打印等腰三角形"></a><a href="https://www.nowcoder.com/practice/1c55ca2b73a34e80bafd5978810dd8ea?tpId=195&tqId=39428&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">19.打印等腰三角形</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk <span class="string">&#x27;BEGIN&#123;</span></span><br><span class="line"><span class="string">    for(n = 1; n &lt;= 5; n++)&#123;</span></span><br><span class="line"><span class="string">        row = &quot;&quot;;</span></span><br><span class="line"><span class="string">        for(i = 1;i &lt;= 5 - n; i++)&#123;</span></span><br><span class="line"><span class="string">            row = row &quot; &quot;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        for(i = 1; i &lt;= n; i++)&#123;</span></span><br><span class="line"><span class="string">            row = row &quot;*&quot; &quot; &quot;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        print row</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="20-打印只有一个数字的行"><a href="#20-打印只有一个数字的行" class="headerlink" title="20.打印只有一个数字的行"></a><a href="https://www.nowcoder.com/practice/296c2785e64c46b7ae4c76bf190c2072?tpId=195&tqId=39429&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">20.打印只有一个数字的行</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line">awk -F <span class="string">&quot;[0-9]&quot;</span> <span class="string">&#x27;&#123;if(NF==2) print $0&#125;&#x27;</span> nowcoder.txt</span><br><span class="line"><span class="comment"># 方法 2</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">let</span> count=0</span><br><span class="line">    <span class="keyword">for</span> (( i = 0; i &lt; <span class="variable">$&#123;#line&#125;</span>; i++))</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            [[ <span class="variable">$&#123;line:i:1&#125;</span> =~ [0-9] ]] &amp;&amp; ((count++))</span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$count</span> -eq 1 ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">printf</span> <span class="string">&quot;<span class="variable">$line</span>\n&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span> &lt; nowcoder.txt</span><br><span class="line"><span class="comment"># 方法 3</span></span><br><span class="line">awk -F <span class="string">&quot;&quot;</span> <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    for (i = 1; i &lt;= NF; i++) &#123;</span></span><br><span class="line"><span class="string">        if ($i ~ /[0-9]/) &#123;</span></span><br><span class="line"><span class="string">            count++</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    if (count == 1) &#123;</span></span><br><span class="line"><span class="string">        print($0)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    count = 0</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="21-格式化输出"><a href="#21-格式化输出" class="headerlink" title="21.格式化输出"></a><a href="https://www.nowcoder.com/practice/d91a06bfaff443928065e611b14a0e95?tpId=195&tqId=39430&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">21.格式化输出</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line">awk -F <span class="string">&quot;&quot;</span> <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    k=0</span></span><br><span class="line"><span class="string">    for (i=NF; i&gt;0; i--) &#123;</span></span><br><span class="line"><span class="string">        k++</span></span><br><span class="line"><span class="string">        str = sprintf(&quot;%s%s&quot;, $i, str)</span></span><br><span class="line"><span class="string">        if (k%3 == 0 &amp;&amp; i&gt;=2 &amp;&amp; NF &gt; 3) &#123;</span></span><br><span class="line"><span class="string">            str = sprintf(&quot;,%s&quot;, str)</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    print(str)</span></span><br><span class="line"><span class="string">    str=&quot;&quot;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br><span class="line"><span class="comment"># 方法 2</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;&quot;&#125;&#123;</span></span><br><span class="line"><span class="string">    for(i=1;i&lt;=NF;i++) &#123;</span></span><br><span class="line"><span class="string">    if((NF-i)%3==0 &amp;&amp; i!=NF) printf $i&quot;,&quot;;else printf $i&#125;;printf &quot;\n&quot;&#125;&#x27;</span> nowcoder.txt </span><br></pre></td></tr></table></figure>

<h2 id="22-格式化输出"><a href="#22-格式化输出" class="headerlink" title="22.格式化输出"></a><a href="https://www.nowcoder.com/practice/d91a06bfaff443928065e611b14a0e95?tpId=195&tqId=39430&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">22.格式化输出</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line">awk -F <span class="string">&quot;:&quot;</span> <span class="string">&#x27;&#123;res[$1] = (res[$1] == &quot;&quot; ? $2 : (res[$1] &quot;\n&quot; $2))</span></span><br><span class="line"><span class="string"> &#125;END&#123;</span></span><br><span class="line"><span class="string">     for(k in res)&#123;</span></span><br><span class="line"><span class="string">         print &quot;[&quot;k&quot;]&quot;</span></span><br><span class="line"><span class="string">         print res[k]</span></span><br><span class="line"><span class="string">     &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 2</span></span><br><span class="line"><span class="built_in">declare</span> -A map</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        arr=(<span class="variable">$&#123;line/:/ &#125;</span>)</span><br><span class="line">		 map[<span class="string">&quot;<span class="variable">$&#123;arr[0]&#125;</span>&quot;</span>]=<span class="string">&quot;<span class="variable">$&#123;map[&quot;<span class="variable">$&#123;arr[0]&#125;</span>&quot;]&#125;</span><span class="variable">$&#123;arr[1]&#125;</span>\n&quot;</span></span><br><span class="line">    <span class="keyword">done</span> &lt; nowcoder.txt</span><br><span class="line">k=0</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$&#123;!map[*]&#125;</span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        [ <span class="variable">$k</span> -eq 0 ] &amp;&amp; k=1 &amp;&amp; tmp=<span class="string">&quot;[<span class="variable">$i</span>]\n<span class="variable">$&#123;map[$i]&#125;</span>&quot;</span> &amp;&amp; <span class="built_in">continue</span></span><br><span class="line">        <span class="built_in">printf</span> <span class="string">&quot;[<span class="variable">$i</span>]\n<span class="variable">$&#123;map[$i]&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;<span class="variable">$tmp</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 3</span></span><br><span class="line"><span class="built_in">declare</span> -A map</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line; <span class="keyword">do</span></span><br><span class="line">arr=(<span class="variable">$&#123;line/:/ &#125;</span>)</span><br><span class="line">    <span class="keyword">if</span> [ map[<span class="string">&quot;<span class="variable">$&#123;arr[0]&#125;</span>&quot;</span>] ]; <span class="keyword">then</span></span><br><span class="line">        map[<span class="string">&quot;<span class="variable">$&#123;arr[0]&#125;</span>&quot;</span>]=<span class="variable">$&#123;map[&quot;<span class="variable">$&#123;arr[0]&#125;</span>&quot;]&#125;</span><span class="string">&quot;\n&quot;</span><span class="variable">$&#123;arr[1]&#125;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        map[<span class="string">&quot;<span class="variable">$&#123;arr[0]&#125;</span>&quot;</span>]=<span class="variable">$&#123;arr[1]&#125;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span> &lt; nowcoder.txt</span><br><span class="line"><span class="built_in">declare</span> -a tmp</span><br><span class="line">tmp+=$(<span class="variable">$&#123;!map[*]&#125;</span> | <span class="built_in">tr</span> <span class="string">&#x27; &#x27;</span> <span class="string">&#x27;\n&#x27;</span> | <span class="built_in">sort</span> -n)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(<span class="built_in">echo</span> <span class="variable">$&#123;!map[*]&#125;</span> | <span class="built_in">tr</span> <span class="string">&#x27; &#x27;</span> <span class="string">&#x27;\n&#x27;</span> | <span class="built_in">sort</span> -n); <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">printf</span> <span class="string">&quot;[<span class="variable">$i</span>]&quot;</span></span><br><span class="line">    <span class="built_in">printf</span> <span class="string">&quot;<span class="variable">$&#123;map[$i]&#125;</span>\n&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h2 id="23-nginx日志分析1-IP统计"><a href="#23-nginx日志分析1-IP统计" class="headerlink" title="23.nginx日志分析1-IP统计"></a><a href="https://www.nowcoder.com/practice/3f2f45c74a1b415db17234f9cfd51469?tpId=195&tqId=39432&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">23.nginx日志分析1-IP统计</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line">awk <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    if(substr($4, 2, 11) == &quot;23/Apr/2020&quot;) &#123;</span></span><br><span class="line"><span class="string">        res[$1]++;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;END &#123;</span></span><br><span class="line"><span class="string">    for(k in res) &#123;</span></span><br><span class="line"><span class="string">        print res[k] &quot; &quot; k</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span> | <span class="built_in">sort</span> -nr -k 1 -t <span class="string">&quot; &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 2</span></span><br><span class="line">awk <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    if ($4 ~ /\[23\/Apr\/2020.*/) &#123;</span></span><br><span class="line"><span class="string">        res[$1]++;</span></span><br><span class="line"><span class="string">       </span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;END &#123;</span></span><br><span class="line"><span class="string">    for(k in res) &#123;</span></span><br><span class="line"><span class="string">        print res[k] &quot; &quot; k</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span> | <span class="built_in">sort</span> -nr -k 1 -t <span class="string">&quot; &quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="24-nginx日志分析2-统计某个时间段的IP"><a href="#24-nginx日志分析2-统计某个时间段的IP" class="headerlink" title="24.nginx日志分析2-统计某个时间段的IP"></a><a href="https://www.nowcoder.com/practice/ddbdd73859fa4fd48bbae7dd2e55f4b9?tpId=195&tqId=39433&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">24.nginx日志分析2-统计某个时间段的IP</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line">awk <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    if ($0 ~ /\[23\/Apr\/2020:2[0-2]/) &#123;</span></span><br><span class="line"><span class="string">        a[$1]=1</span></span><br><span class="line"><span class="string">    &#125; </span></span><br><span class="line"><span class="string">&#125; END &#123;</span></span><br><span class="line"><span class="string">    print (length(a))</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br><span class="line"><span class="comment"># 方法 2</span></span><br><span class="line">grep <span class="string">&quot;23/Apr/2020&quot;</span> | <span class="built_in">cut</span> -c <span class="string">&#x27;-12&#x27;</span> | <span class="built_in">sort</span> -u | <span class="built_in">wc</span> -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 3</span></span><br><span class="line"><span class="built_in">declare</span> -A map</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        a=(<span class="variable">$line</span>)</span><br><span class="line">        [[ <span class="variable">$&#123;a[3]&#125;</span> =~ 23/Apr/2020:2[0-2] ]] &amp;&amp; ((map[<span class="string">&quot;<span class="variable">$&#123;a[0]&#125;</span>&quot;</span>]=0))</span><br><span class="line">    <span class="keyword">done</span> &lt; nowcoder.txt</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;<span class="variable">$&#123;#map[*]&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="25-nginx日志分析3-统计访问3次以上的IP"><a href="#25-nginx日志分析3-统计访问3次以上的IP" class="headerlink" title="25.nginx日志分析3-统计访问3次以上的IP"></a><a href="https://www.nowcoder.com/practice/e1846855de79495fbb017b8ddf6ba969?tpId=195&tqId=39434&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">25.nginx日志分析3-统计访问3次以上的IP</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line">awk <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    map[$1]++</span></span><br><span class="line"><span class="string">&#125; END &#123;</span></span><br><span class="line"><span class="string">    for (i in map) &#123;</span></span><br><span class="line"><span class="string">        if (map[i] &gt; 3) &#123;</span></span><br><span class="line"><span class="string">            printf (&quot;%d %s\n&quot;, map[i], i)</span></span><br><span class="line"><span class="string">        &#125; </span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span> nowcoder.txt | <span class="built_in">sort</span> -rn -k1 -t <span class="string">&quot; &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 2</span></span><br><span class="line"><span class="built_in">declare</span> -A map</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line; <span class="keyword">do</span></span><br><span class="line">    tmp=(<span class="variable">$line</span>)</span><br><span class="line">        ((map[<span class="variable">$tmp</span>[1]]+=1))</span><br><span class="line"><span class="keyword">done</span> &lt; nowcoder.txt</span><br><span class="line"><span class="built_in">declare</span> -a tmpArray</span><br><span class="line">tmp=0</span><br><span class="line">index=0</span><br><span class="line"><span class="keyword">for</span> (j=0; j&lt;=3;j++); <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$&#123;!map[*]&#125;</span>; <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$&#123;map[i]&#125;</span> gt tmp ]; <span class="keyword">then</span></span><br><span class="line">            tmp=<span class="variable">$&#123;map[i]&#125;</span></span><br><span class="line">            index=i</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    tmpArray[index]=tmp</span><br><span class="line">    <span class="built_in">unset</span> map[index]</span><br><span class="line">    tmp=0</span><br><span class="line">    index=0</span><br><span class="line"><span class="keyword">done</span>    </span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 3</span></span><br><span class="line"><span class="built_in">sort</span> -rn -k1 tmp.txt</span><br></pre></td></tr></table></figure>

<h2 id="26-nginx日志分析4-查询某个IP的详细访问情况"><a href="#26-nginx日志分析4-查询某个IP的详细访问情况" class="headerlink" title="26.nginx日志分析4-查询某个IP的详细访问情况"></a><a href="https://www.nowcoder.com/practice/d0d81982176b4d5ebf032dbfb4a850d6?tpId=195&tqId=39435&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">26.nginx日志分析4-查询某个IP的详细访问情况</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line">awk <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    if ($1 == &quot;192.168.1.22&quot;) &#123;</span></span><br><span class="line"><span class="string">        a[$7]++</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125; END &#123;</span></span><br><span class="line"><span class="string">    for (i in a)&#123;</span></span><br><span class="line"><span class="string">        printf(&quot;%d %s\n&quot;,a[i], i)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span> | <span class="built_in">sort</span> -r</span><br></pre></td></tr></table></figure>

<h2 id="27-nginx日志分析5-统计爬虫抓取404的次数"><a href="#27-nginx日志分析5-统计爬虫抓取404的次数" class="headerlink" title="27.nginx日志分析5-统计爬虫抓取404的次数"></a><a href="https://www.nowcoder.com/practice/3a3573822a854710a259d89066aad695?tpId=195&tqId=39436&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">27.nginx日志分析5-统计爬虫抓取404的次数</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        a=(<span class="variable">$line</span>)</span><br><span class="line">        [ <span class="variable">$&#123;a[8]&#125;</span> == <span class="string">&quot;404&quot;</span> ] &amp;&amp; [ <span class="variable">$&#123;a[14]&#125;</span> == <span class="string">&#x27;+http://www.baidu.com/search/spider.html)&quot;&#x27;</span> ] &amp;&amp; ((b++))</span><br><span class="line">    <span class="keyword">done</span> &lt; nowcoder.txt</span><br><span class="line"><span class="built_in">printf</span> <span class="variable">$b</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 2</span></span><br><span class="line">awk <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    if ($9 == &quot;404&quot; &amp;&amp; $15 ~/baidu/) &#123;</span></span><br><span class="line"><span class="string">        k++</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125; END &#123;</span></span><br><span class="line"><span class="string">    print(k)</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 3</span></span><br><span class="line">grep <span class="string">&quot;baidu&quot;</span> |grep 404|<span class="built_in">wc</span> -l</span><br></pre></td></tr></table></figure>

<h2 id="28-nginx日志分析6-统计每分钟的请求数"><a href="#28-nginx日志分析6-统计每分钟的请求数" class="headerlink" title="28.nginx日志分析6-统计每分钟的请求数"></a><a href="https://www.nowcoder.com/practice/9a37600d342c47ed9e9a0fd33c1c189e?tpId=195&tqId=39437&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">28.nginx日志分析6-统计每分钟的请求数</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk -F <span class="string">&quot;:&quot;</span> <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    a[sprintf(&quot;%s:%s&quot;, $2, $3)]++</span></span><br><span class="line"><span class="string">&#125; END &#123;</span></span><br><span class="line"><span class="string">    for (i in a) &#123;</span></span><br><span class="line"><span class="string">        printf(&quot;%d %s\n&quot;, a[i], i)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span> | <span class="built_in">sort</span> -r</span><br></pre></td></tr></table></figure>

<h2 id="29-netstat练习1-查看各个状态的连接数"><a href="#29-netstat练习1-查看各个状态的连接数" class="headerlink" title="29.netstat练习1-查看各个状态的连接数"></a><a href="https://www.nowcoder.com/practice/f46a302d14e04b149bb50670f255293a?tpId=195&tqId=39438&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">29.netstat练习1-查看各个状态的连接数</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line">awk <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    if ($1 == &quot;tcp&quot;) &#123;</span></span><br><span class="line"><span class="string">        arr[$6]++</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125; END &#123;</span></span><br><span class="line"><span class="string">    for (i in arr) &#123;</span></span><br><span class="line"><span class="string">        printf(&quot;%s %d\n&quot;, i, arr[i])</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span> | <span class="built_in">sort</span> -nrk2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 2</span></span><br><span class="line"><span class="built_in">declare</span> -A map</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        tmp=(<span class="variable">$line</span>)</span><br><span class="line">        [ <span class="variable">$&#123;tmp[0]&#125;</span> == <span class="string">&quot;tcp&quot;</span> ] &amp;&amp; ((map[<span class="string">&quot;<span class="variable">$&#123;tmp[5]&#125;</span>&quot;</span>]++))</span><br><span class="line">    <span class="keyword">done</span> &lt; nowcoder.txt</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">InsertSort</span></span>()&#123;</span><br><span class="line">    tmp=()</span><br><span class="line">    <span class="keyword">for</span> ve <span class="keyword">in</span> <span class="variable">$&#123;map[*]&#125;</span></span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            tmp[<span class="variable">$&#123;#tmp[*]&#125;</span>]=<span class="variable">$ve</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    q=<span class="variable">$&#123;#tmp[*]&#125;</span></span><br><span class="line">    <span class="keyword">for</span> ((i=0;i&lt;<span class="variable">$q</span>;i++))</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">for</span> ((j=<span class="variable">$i</span>+1;j&lt;<span class="variable">$q</span>;j++))</span><br><span class="line">                <span class="keyword">do</span></span><br><span class="line">                    <span class="keyword">if</span> [ <span class="variable">$&#123;tmp[$i]&#125;</span> -lt <span class="variable">$&#123;tmp[$j]&#125;</span> ];<span class="keyword">then</span></span><br><span class="line">                        t=<span class="variable">$&#123;tmp[$i]&#125;</span></span><br><span class="line">                        tmp[<span class="variable">$i</span>]=<span class="variable">$&#123;tmp[$j]&#125;</span></span><br><span class="line">                        tmp[<span class="variable">$j</span>]=<span class="variable">$t</span></span><br><span class="line">                    <span class="keyword">fi</span></span><br><span class="line">                <span class="keyword">done</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line">InsertSort</span><br><span class="line"><span class="keyword">for</span> ((i=0; i&lt;q; i++))</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">for</span> ve <span class="keyword">in</span> <span class="variable">$&#123;!map[*]&#125;</span></span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">                <span class="keyword">if</span> [ <span class="variable">$&#123;tmp[$i]&#125;</span> -eq <span class="variable">$&#123;map[$ve]&#125;</span> ];<span class="keyword">then</span></span><br><span class="line">                    <span class="built_in">printf</span> <span class="string">&quot;<span class="variable">$ve</span> <span class="variable">$&#123;map[$ve]&#125;</span>\n&quot;</span></span><br><span class="line">                <span class="keyword">fi</span></span><br><span class="line">            <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h2 id="30-netstat练习2-查看和3306端口建立的连接"><a href="#30-netstat练习2-查看和3306端口建立的连接" class="headerlink" title="30.netstat练习2-查看和3306端口建立的连接"></a><a href="https://www.nowcoder.com/practice/534b95941ffb495b9ba57fbfc3cd723a?tpId=195&tqId=39439&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">30.netstat练习2-查看和3306端口建立的连接</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">if($0 ~&quot;3306&quot;)&#123;</span></span><br><span class="line"><span class="string">    if($6==&quot;ESTABLISHED&quot;)&#123;</span></span><br><span class="line"><span class="string">        a[$5]++</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">END &#123;</span></span><br><span class="line"><span class="string">for(i in a)&#123;</span></span><br><span class="line"><span class="string">    print a[i],i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span> | sed <span class="string">&#x27;s/:3306//&#x27;</span> | <span class="built_in">sort</span> -nr -k1</span><br></pre></td></tr></table></figure>

<h2 id="31-netstat练习3-输出每个IP的连接数"><a href="#31-netstat练习3-输出每个IP的连接数" class="headerlink" title="31.netstat练习3-输出每个IP的连接数"></a><a href="https://www.nowcoder.com/practice/f601fc4f35b5453ba661531051b6ce69?tpId=195&tqId=39440&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">31.netstat练习3-输出每个IP的连接数</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    if ($1 == &quot;tcp&quot;) &#123;</span></span><br><span class="line"><span class="string">        split($5, a, &quot;:&quot;)</span></span><br><span class="line"><span class="string">        t[a[1]]++</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125; END &#123;</span></span><br><span class="line"><span class="string">    for (i in t)&#123;</span></span><br><span class="line"><span class="string">        printf(&quot;%s %d\n&quot;, i, t[i])</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span> | <span class="built_in">sort</span> -nrk2</span><br></pre></td></tr></table></figure>

<h2 id="32-netstat练习4-输出和3306端口建立连接总的各个状态的数目"><a href="#32-netstat练习4-输出和3306端口建立连接总的各个状态的数目" class="headerlink" title="32.netstat练习4-输出和3306端口建立连接总的各个状态的数目"></a><a href="https://www.nowcoder.com/practice/5ce76fd1513d4eacae68ad3b2aca1fbb?tpId=195&tqId=39441&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">32.netstat练习4-输出和3306端口建立连接总的各个状态的数目</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    if ($1 == &quot;tcp&quot; &amp;&amp; $5 ~ /3306/) &#123;</span></span><br><span class="line"><span class="string">        if ($6 == &quot;ESTABLISHED&quot;) &#123;</span></span><br><span class="line"><span class="string">            es++</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        ans++</span></span><br><span class="line"><span class="string">        arr[$5]=0</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125; END &#123;</span></span><br><span class="line"><span class="string">    printf(&quot;TOTAL_IP %d\nESTABLISHED %d\nTOTAL_LINK %d&quot;, length(arr), es, ans)</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="33-业务分析-提取值"><a href="#33-业务分析-提取值" class="headerlink" title="33.业务分析-提取值"></a><a href="https://www.nowcoder.com/practice/f144e52a3e054426a4d265ff38399748?tpId=195&tqId=39442&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">33.业务分析-提取值</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    if ($0 ~ /Server version/) &#123;</span></span><br><span class="line"><span class="string">        sub(/.*:/, &quot;&quot;, $0)</span></span><br><span class="line"><span class="string">        printf(&quot;serverVersion:%s\n&quot;, $0)</span></span><br><span class="line"><span class="string">        next</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    if ($0 ~ /Server number/) &#123;</span></span><br><span class="line"><span class="string">        sub(/.*:/, &quot;&quot;, $0)</span></span><br><span class="line"><span class="string">        printf(&quot;serverName:%s\n&quot;, $0)</span></span><br><span class="line"><span class="string">        next</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    if ($0 ~ /OS Version/) &#123;</span></span><br><span class="line"><span class="string">        sub(/.+Name:/, &quot;&quot;, $0)</span></span><br><span class="line"><span class="string">        t=$0</span></span><br><span class="line"><span class="string">        sub(/,.*/, &quot;&quot;, $0)</span></span><br><span class="line"><span class="string">        sub(/.*:/, &quot;&quot;, t)</span></span><br><span class="line"><span class="string">        printf(&quot;osName:%s\nosVersion:%s&quot;, $0, t)</span></span><br><span class="line"><span class="string">        exit</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="34-ps分析-统计VSZ-RSS各自总和"><a href="#34-ps分析-统计VSZ-RSS各自总和" class="headerlink" title="34.ps分析-统计VSZ,RSS各自总和"></a><a href="https://www.nowcoder.com/practice/7094b5f96e1a4c998ce01baf407beee6?tpId=195&tqId=39443&rp=1&ru=/exam/oj&qru=/exam/oj&sourceUrl=/exam/oj?page=1&tab=SHELL%E7%AF%87&topicId=195&difficulty=undefined&judgeStatus=undefined&tags=&title=">34.ps分析-统计VSZ,RSS各自总和</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    v += $5</span></span><br><span class="line"><span class="string">    r += $6</span></span><br><span class="line"><span class="string">&#125; END &#123;</span></span><br><span class="line"><span class="string">    printf(&quot;MEM TOTAL\nVSZ_SUM:%0.1fM,RSS_SUM:%0.3fM&quot;, v/1024, r/1024)</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>bash练习</tag>
      </tags>
  </entry>
</search>
